@model Desafio.Models.Pacientes
@{
    ViewBag.Title = "Cadastro";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card-body p-0">
    <!-- Nested Row within Card Body -->
    <div class="row" style="margin:10%;">
        <div class="col-lg-2"></div>
        <div class="col-lg-8">
            <div class="p-5">
                <div class="text-center">
                    @if (Model == null || Model.Id == 0)
                    {
                        <h1 class="h4 text-gray-900 mb-4">Cadastro de Pacientes</h1>
                    }
                    else
                    {
                        <h1 class="h4 text-gray-900 mb-4">Editar Paciente</h1>
                    }
                </div>

                @using (Html.BeginForm("Salvar", "Paciente", FormMethod.Post, new { id = "form-pacientes", role = "form", @autocomplete = "off" }))
                {
                    @Html.HiddenFor(c => c.Id)
                    <div class="form-group row">
                        <div class="col-sm-12 mb-3 mb-sm-0">
                            <label class="form-label">Nome</label>
                            @Html.TextBoxFor(c => c.Nome, new { @class = "form-control", required = "required", maxlength = "100" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-sm-4 mb-3 mb-sm-0">
                            <label class="form-label">CPF</label>
                            @Html.TextBoxFor(c => c.Cpf, new { @class = "form-control", required = "required", @placeholder = "___.___.___-__" })
                            <div class="invalid-feedback" id="avisar-cpf-existente"></div>
                        </div>
                        <div class="col-sm-4 mb-3 mb-sm-0">
                            <label class="form-label">Data de Nascimento</label>
                            @Html.TextBoxFor(c => c.DataNascimento, new { @class = "form-control", @autocomplete = "off", required = "required" })
                        </div>
                        <div class="col-sm-4 mb-3">
                            <label class="form-label">Sexo</label>
                            @Html.DropDownListFor(c => c.Sexo, (SelectList)ViewBag.Sexo, new { @class = "form-control selectsexo" })
                            @Html.Hidden("SexoSelecionado", Model.Sexo)
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-sm-4 mb-3 mb-sm-0">
                            <label class="form-label">Telefone</label>
                            @Html.TextBoxFor(c => c.Telefone, new { @class = "form-control", @placeholder = "(__) _____-____" })
                        </div>
                        <div class="col-sm-8 mb-3 mb-sm-0">
                            <label class="form-label">Email</label>
                            @Html.TextBoxFor(c => c.Email, new { @class = "form-control", @type = "email" })
                        </div>
                    </div>

                    <hr>

                    <button type="submit" class="btn btn-primary btn-user btn-block salvar">Salvar</button>
                    <a href="@Url.Action("Index", "Home")" class="btn btn-facebook btn-user btn-block">Voltar</a>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/Content/js/cpf-validate.js"></script>
    <script>
        $(document).ready(function () {

            $("#Cpf").cpfcnpj({
                 mask: true,
                 validate: 'cpf',
                 event: 'change',
                 ifValid: function (input) {
                     input.removeClass("error");

                     $('#avisar-cpf-existente').show();
                     $('#avisar-cpf-existente').text('Buscando CPF no sistema...');
                     $.ajax({
                         url: '@Url.Action("VerificarCPFExistente", "Paciente")',
                         data: { cpf: $("#Cpf").val(), id: $("#Id").val() },
                         method: 'post',
                         success: function (data) {
                             if (data) {
                                 $('#avisar-cpf-existente').show();
                                 $('#avisar-cpf-existente').text('CPF já cadastrado no sistema.');
                                 $(".salvar").attr("disabled", true);
                             }
                             else {
                                 $('#avisar-cpf-existente').hide();
                                 $('#avisar-cpf-existente').text('');
                                 $(".salvar").attr("disabled", false);
                             }
                         },
                         error: function () {
                             $('#avisar-cpf-existente').text('Ocorreu algum erro ao verificar.');
                         }
                     });
                 },
                 ifInvalid: function (input) {
                     if ($("#Cpf").val().length === 14 ) {
                         $('#avisar-cpf-existente').show();
                         $('#avisar-cpf-existente').text('CPF inválido.');
                     }
                 }
            });

            $("#Telefone").mask('(00) 0000Z-0000', { translation: { 'Z': { pattern: /[0-9]/, optional: true } } });
            $('#Cpf').mask('000.000.000-00', { clearIfNotMatch: true });
            $('#DataNascimento').mask('00/00/0000', { clearIfNotMatch: true });

            // Inicializa select2 de sexo
            $('.selectsexo').each(function () {
                var id = $(`[name$="SexoSelecionado"]`).val()
                var option = $(this).children(`option[value="${id}"]`)
                option.prop("selected", true)
            })

        });

    </script>

    @if (Model != null && Model.Id > 0)
    {
        <script>
            $("#DataNascimento").val('@(@Model.DataNascimento != null? Model.DataNascimento.ToString("dd/MM/yyyy") :"")');
        </script>
    }
}
